%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 24.3.0
%%For: (Neko) ()
%%Title: (1f57a_man_dancing.ai)
%%CreationDate: 1/24/2022 4:50 PM
%%Canvassize: 16383
%%BoundingBox: -3 -2 30 36
%%HiResBoundingBox: -2.81655 -1.3975 29.2349 35.9081
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([\714\727\660\746\711\653])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 18.5 17.5 18.5 17.5
%AI3_TileBox: -279.6378 -402.9751 315.6822 438.9449
%AI3_DocumentPreview: None
%AI5_ArtSize: 36 36
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -30.111 41.7685 20.91 3240 1920 26 0 0 -3752 -922 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-279 -402.8898
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 112 128 8
%%BeginData: 9315 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3DFFC9C9C1C7C1C7C1C8C8C9CAFD63FFC9C1C1C0C1C1C7FD04C1
%C0C1C1C9CFFD5EFFCAC8C0C7C1C7C1C7C1C7C1C7C1C7C1C7C0C8CAFD1CFF
%CFC8CFC8FD3CFFCAC1C0C7C1C1C1C7C1C1C1C7C1C1C1C7C1C1C0C1CAFD1B
%FFFD04C8C9FD3BFFC8C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C8FD
%1AFFCFCDC8CDC8CDCFFD39FFC9C0C1C1C7C1C1C1C7C1C1C1C7C1C1C1C7C1
%C1C1C7C0C9FD15FFCEC8FFFFCEC8C8C8CDC8CFFD39FFC1C7C1C7C1C7C1C7
%C1C7C1C7C1C7C1C7C1C7C1C7C1C7C8FD15FFC9CDCFFFC7CEC8CEC8CEC8CF
%FD37FFC9C1C1C7C1C1C1C7C1C1C1C7FD05C1C8C7C8C1C1C0C7CAFD14FFCF
%C7CEC8C8C7CDFD04C8CFFD37FFC9C0C7C1C7C1C7C1C7C1C7C1C7C1C7C7C8
%C8CDC8C8C1C7C1CFFD14FFCFCDC8C8C8CDC8CDC8CDCEFD38FFC2C1C1C7C1
%C1C1C7C1C1C1C7C1C7C7CDC8C8C7CDC8C8C0C7CAFD14FFCEC7CDC7C2C7CD
%C8C8C7FD39FFC8C1C7C1C7C1C7C1C7C1C7C1C8C8CDC8CDC8CDC8CDC8C7C1
%FD15FFCECDC8CDC7C8C8CDC7CEFD39FFFD05C1C7C1C1C0C7C7C8C7C8C7C8
%C7C8C7C8C7CDC1C7CAFD14FFCFC7C8C7C8C7C8C7C8CAFD39FFC9C1C7C1C7
%C1C7C1C7C8CDC8CDC8CDC8CDC8CDC8CDC8C8C9FD15FFA87CC8CDC8CDC8CD
%CEFD3AFFC8FD04C1C7C1C1C1CDC8C8C7CDC8C8C7CDC8C8C7CDC8FD16FF7D
%F82751A6C8CDC9FD3BFFC9C0C7C1C8C7C7C1C8C8CDC8CDC8CDC8CDC8CDC8
%CDC7CDCFFD15FFFD04270551A0FD3CFFC9C1C0C7C8C8C1C7C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7FD15FF520500270527F87DFD3DFFC1C7C7CDC8CDC7
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CEFD14FFA8FD0727A8FD3DFFC8C0C8C8
%C8C7C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C8FD14FF7DF82705FD0427FD3E
%FFCFC7C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CFFD14FFFD062700
%7DFD3FFFC8C1C1CDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8CFFD13FF5305
%00270527F827A8FD40FFC8C7C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDCEFD
%13FFA928FD062752FD42FFC2C7C8C8C7CDC8C8C7CDC8C8C7CDC8C8C8FD14
%FF7DF82705272727F87DFD43FFC9CDC8CDC8CDC8CDC8CDC8CDC8CDC8CFFD
%14FFFD0827A8FD44FFC9C8C7C8C7C8C7C8C7C8C7C8C7CFFD14FF52050027
%0527002727FD46FFCFCDC8CDC8CDC8CDC8CDC9FD15FFA8FD072705A8FD48
%FFCDC7CDC8C8C7CDC7FFCBFD14FF52F82705272727F827A8FD48FFC9CDC8
%CDC8CDC8C8C3B6A1FD12FFA800FD072752FD48FF93BC93BC99C8C8C28D93
%8DBDFD0CFFA8FFA8FFA8A82727002705270027F8A8FD46FFAFA1B593B68D
%B699CD99B693B66F59537D597EA8A87D7D5252275227282728FD092752FD
%41FFA8A87D522727054B8DB693938DB6C8BC8DB69393F827F805F8270005
%F8270027F82705270027272705272727052759FD3EFFA87E522805270527
%05274BB693B693B68DC899B693B6934B05FD1827FD3DFF7D2727F8270027
%0027052700276FB58D93939399BC8D938DB5272700270527002705270027
%052700270527002705270027F852FD3CFF5300FD0B270570B5B693B693BC
%93B693B6B54B05FD1727A8FD3AFFA82EF827272705272727052727270527
%279393B693938DB6939393B64B2705272727052727270527272705272727
%05272727052728FD3AFFA85205FD0F2793B693B693B693B693B69370FD16
%2700A8FD39FFA827F8270527002705270027052700270527006F93938D93
%93938D9393B569270527002705270027052700270527002705270027F852
%FD3AFF5200FD11274BB693B693B693B693B69394FD12270527277DFD3AFF
%52F82705272727052727270527272705272727052793B593B6939393B693
%B593270527052727270527272705270527F827055253FD3BFF7DF8FD1327
%059493B693B693B693B693B6FD082705270527F82727597DFD3DFFA8F827
%002705270027052700270527002705270027052745B693938D9393938DB5
%934B00270527002705272752527DA8FD40FFFD1627054C93B693B693B693
%B693B64BFD05270559A8FD44FF2E27272705272727052727270027272705
%27272705FD042794939393B6939393B6934B05272727052752FD44FF7DFD
%0B27525200FD0B276FB693B693B693B693B64BFD0527F87DFD43FFA82700
%27002705270027050552FF520500270527002705270027056F8D9393938D
%9393938D6F05270027050552FD43FF5205FD092752FFFF7DF8FD0B274BB6
%93B693B693B693B64BFD0527F884FD42FF7DF827272705272727052752FF
%FFFF520505272727052727270527054B93B6939393B69393936F05270527
%27277DFD42FFFD0B27FD04FF7D05FD0C279493B693B693B693B64BFD0627
%A8FD41FF7D27052700270527002705A8FD04FF7D27052700270527002705
%2700276FB58D9393938DB5934B00270527F827A8FD41FF7D00FD072705A8
%FD05FFA805FD0C279493B693B693B693B64BFD0627FD42FF522727270527
%2727F852FD06FF7D272727052727270527272705276FB593B6939393B693
%4B05272727F82EFD42FF5200FD0727A8FD06FF7DF8FD0B27059493B693B6
%93B69394FD062752FD42FF2E2700270527002727AFFD06FF7D2700270527
%002705270027052769B593938D9393B5692705270027F859FD42FF5900FD
%062752A8FD06FF8400FD0B270594B5B693B693B69394FD06277DFD42FF52
%2705272727052727FD07FF7D270527272705272727052727276FB6939393
%B693B56F272727052705A8FD42FF7D00FD05270052FD07FF7D00FD0C276F
%93B693B693B6B56F05272727052EFD43FF7D2705270027052727FD07FF52
%2705270027052700270527F8276FB58D9393938DB56F27F82705052EFD43
%FFA8FD072752A8FD06FF7D05FD0527052727274B7093B693B693B693B693
%B66F70272700A8FD43FFA827052705FD0427FD07FF520505270527274B4B
%9393B593B6939393B6939393B693B5939469A1FD45FFFD0827A8FD06FFA8
%6F946F9493B693B693B693B693B693B693B693B693B693B693B6CAFD45FF
%52F8270527002705A8FD07FFB68DB593938DB593938D9393938D9393938D
%9393938DFD0493FD46FF7DFD0727A8FD07FF94B693B693B693B693B693B6
%93B693B693B693B693B693B693BDFD46FFA8052727270527F8A8FD07FF94
%8DB6939393B6939393B6939393B6939393B6939393B693939BFD47FF5200
%FD0527A8FD07FF94B593B693B593B693B593B693B593B693B593B693B58D
%B68DCAFD47FF7D0500270027F87DFD06FFA8BC9394939A9394939A939493
%9A9394939A9394939A949A93BCCAFD48FFFD052775A7FD07FFFD19A8FD49
%FFA77BA6A5C8C7CDC9FD06FFFD19A8FD49FFCFCDC8CDC8CDC8CDCFFD05FF
%FD19A8FD49FFCDC7C8C7C8C7C8C7CDFD04FFA8A87DA8A8A8A2A8A8A8A2A8
%A8A8A2A8A8A8A2A8A8A8A2FD04A8FD48FFC8CDC8CDC8CDC8CDC7CFFD04FF
%FD19A8FD49FFCDC7C8C7CDC8C8C9CEC7CEFFFFFD1AA8A2FD48FFC8CDC8CD
%C8CDC7CFFFCECEFFFFFFFD1BA8FD47FFCEC7CDFD04C8C9FD05FFFD04A8A2
%A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A87DFD46FFCECDC8
%CEC8CEC8CEFD06FFFD1DA8FD45FFCFC7CEC8CDC8CDC8FD05FFFD1FA8FD44
%FFCFCDC8CDC8CDC8CDCFFD04FFFD20A8FD44FFCFCFC7CDC7CEC8FD05FFA8
%A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A87D
%A8A8FD45FFCFCFCDCEFD06FFFD21A8FD47FFCFFD07FFFD22A8FD4DFFFD11
%A8FFFD11A8FD4EFF7DA8A8A8A2A8A8A8A2A8A8A8A2A8A8FFFFFFA8A8A2A8
%A8A8A2A8A8A8A2A8A8A8A2A8A8FD4CFFFD10A8FD04FFFD11A8FD4BFFA8A2
%FD0EA8FD05FF7DFD10A8FD4AFFFD0FA8FD07FFFD0FA8CBFD49FFFD04A8A2
%A8A8A8A2A8A8A8A2FD04A8FD06FFA87DA8A8A8A2A8A8A8A2A8A8A8A2A8A8
%FD4AFFFD0FA8FD08FFCBFD0FA8FD48FFFD0FA8FD09FFFD11A8FD48FFFD0E
%A8FD0AFFFD0FA8FD48FFA8A8A2A8A8A8A2A8A8A8A2FD04A8FD0BFFFD04A8
%A2A8A8A8A2A8A8A8A2A8A8FD48FFFD0DA8FD0DFFFD0DA8FD48FFFD0FA8FD
%0DFFFD0DA8FD47FFCBFD0DA8FD0FFFFD0CA8FD47FFA2A8A8A8A2A8A8A8A2
%A8A8A87DFD0FFFFD04A8A2A8A8A8A2FD04A8FD46FFFD0EA8FD10FFFD0BA8
%FD47FFA8A2FD0CA8FD0FFFFD0DA8FD46FFFD0DA8FD11FFFD0CA8FD45FFFD
%04A8A2A8A8A8A2A8A8A87DA8A8FD10FFA87DA8A8A8A2A8A8A8A2A8A8FD45
%FFFD0EA8FD11FFFD0BA8FD45FFA8A2FD0BA8A2FD12FFA8A2FD0AA8FD44FF
%FD0DA8FD13FFFD0BA8FD44FFFD04A8A2A8A8A8A2A8A8A87DA8FD13FFA8A8
%A8A2A8A8A8A2FD04A8FD42FFFD0FA8FD13FFFD0BA8FD43FFFD0EA8FD15FF
%FD0BA8FD42FFFD0DA8FD15FFFD0BA8FD42FF7DA8A8A8A2A8A8A8A2A8A8A8
%7DFD16FFA87DA8A8A8A2A8A8A8A2A8A8FD40FFFD0DA8FD17FFFD0BA8FD40
%FFFD0EA8FD17FFA8A2FD09A8FD40FFFD0DA8FD18FFFD0BA8FD3FFFA87DA8
%A8A8A2A8A8A8A2FD04A8FD17FFFD04A8A2A8A8A8A2A8A8A8FD3FFFFD0DA8
%FD19FFFD0BA8FD3EFFFD0DA8FD19FFFD0BA8FD3EFFFD0DA8FD1BFFFD0AA8
%FD3EFFA87DA8A8A8A2A8A8A8A2A8A2FD1BFFA8A8A2A8A8A8A2A8A8A87DFD
%3EFFFD0BA8FD1DFFFD09A8FD3EFFFD0BA8CBFD1CFFFD0BA8FD3CFFFD0DA8
%FD1DFFA8A8A8CBA8A8A8FFA87D27A8FD39FFA87D7DFD09A827277DFD1BFF
%FD057DA87DA87D7D5205F87DA8FD37FF7D00522E52527DFD04522727002E
%7DFD1AFF5200FD0C27527EFD36FF5205F8270027F8270527272827272728
%27597DFD04A8FD13FF0527052700270527272E272727522827277D7DA87D
%A8FD30FF7D05FD04272827522E522E522E522727002705270552A8FD11FF
%A82705FD0427522E522E522E5228522727F8272727007DFD2FFF27270527
%002E2852FD052752272700270527F827F87DFD11FFA805270027272E2752
%FD05272E052705270027052727FD2FFF52FD04272852FD0F270552FD11FF
%A8FD0427282852FD0E27F827A8FD2EFF2705F805F827F8272727F805F827
%0527F827F82705527DAFFD11FFA8F805F827F827F82E2727F82700270027
%0027F82727527DFD2FFFA8FD047D52527DFFA8A87D5227522752527D7DFD
%16FFA8FD047D5259A8FFA87D525227272752527DA8FD40FFA8FD29FFA8FD
%FCFFFDD6FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (\315\274\317\361\303\350\304\241) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.929412 0.87924 0.890196 0.799985 ([\714\727\660\746\711\653]) 0 Xs
([\714\727\660\746\711\653])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\315\274\262\343 1) Ln
0 A
1 D
0 O
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
0 J 0 j 1 w 10 M []0 d0 XR
26.157 0.740008 m
26.152 0.774009 26.102 0.954009 Y
26.045 0.927009 L
26.049 1.06101 L
26.028 1.64101 25.441 1.57101 25.371 1.57701 c
25.301 1.58301 25.066 1.57101 24.775 1.608 C
24.485 1.645 24.205 1.71601 23.959 1.865 C
23.672 2.039 23.281 2.332 22.945 2.528 c
22.609 2.724 22.187 2.965 Y
21.82 2.283 21.06 2.311 V
20.651 2.326 20.01 2.64801 19.927 2.671 C
19.817 2.702 19.768 2.64001 19.722 2.555 C
19.676 2.469 19.511 1.871 19.511 1.55 c
19.511 1.346 19.536 1.217 19.555 1.145 C
19.5 1.162 L
19.475 1.169 19.451 1.15 19.451 1.123 C
19.451 0.436 L
19.451 0.391002 19.488 0.289001 19.606 0.264998 c
19.724 0.241 21.365 0.099998 21.427 0.154998 c
21.489 0.209998 21.557 0.386996 21.61 0.411998 C
21.663 0.435996 22.213 0.317996 22.469 0.256999 c
22.725 0.196002 23.167 0.091998 23.687 0.091998 c
24.207 0.091998 24.878 0.244998 25.294 0.348998 C
25.709 0.452998 26.035 0.591998 26.109 0.638 c
26.183 0.684001 26.162 0.705001 26.157 0.740008 c
f
0 D
0.768429 0.659205 0.567041 0.141054 0.294118 0.329412 0.364706 Xa
21.19 0.595008 m
20.78 0.882007 L
20.788 0.895007 21.609 2.02901 23.219 1.54801 C
23.311 1.67401 23.449 1.87201 23.582 2.09201 C
24.01 1.83201 L
23.77 1.43601 23.519 1.11401 23.509 1.10101 C
23.398 0.95901 L
23.228 1.02001 L
21.849 1.51101 21.197 0.60501 21.19 0.595008 C
f
1 D
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
14.268 0.740008 m
14.263 0.774009 14.213 0.954009 Y
14.156 0.927009 L
14.16 1.06101 L
14.139 1.64101 13.552 1.57101 13.482 1.57701 c
13.412 1.58301 13.177 1.57101 12.886 1.608 c
12.595 1.645 12.316 1.71601 12.07 1.865 C
11.783 2.039 11.392 2.332 11.056 2.528 c
10.72 2.724 10.298 2.965 Y
9.931 2.283 9.171 2.311 V
8.762 2.326 8.121 2.64801 8.038 2.671 C
7.928 2.702 7.879 2.64001 7.833 2.555 C
7.787 2.469 7.622 1.871 7.622 1.55 c
7.622 1.346 7.647 1.217 7.666 1.145 C
7.611 1.162 L
7.586 1.169 7.562 1.15 7.562 1.123 C
7.562 0.436 L
7.562 0.391002 7.599 0.289001 7.717 0.264998 c
7.835 0.241 9.476 0.099998 9.538 0.154998 c
9.6 0.209998 9.668 0.386996 9.721 0.411998 C
9.774 0.435996 10.324 0.317996 10.58 0.256999 c
10.836 0.196002 11.278 0.091998 11.798 0.091998 c
12.318 0.091998 12.989 0.244998 13.405 0.348998 C
13.82 0.452998 14.146 0.591998 14.22 0.638 C
14.293 0.684001 14.273 0.705001 14.268 0.740008 c
f
0 D
0.768429 0.659205 0.567041 0.141054 0.294118 0.329412 0.364706 Xa
9.3 0.594008 m
8.891 0.882007 L
8.899 0.894008 9.714 2.031 11.33 1.54801 C
11.421 1.67401 11.56 1.87201 11.693 2.09201 C
12.121 1.83201 L
11.881 1.43601 11.63 1.11401 11.62 1.10101 C
11.509 0.95901 L
11.339 1.02001 L
9.973 1.50801 9.327 0.632011 9.3 0.594008 C
f
1 D
0.042054 0.170016 0.691768 0 1 0.862745 0.364706 Xa
28.658 34.184 m
28.468 34.273 28.379 34.082 Y
28.001 33.27 L
28.008 33.284 27.918 33.341 27.924 33.352 C
28.484 34.553 L
28.573 34.743 28.382 34.832 v
28.191 34.921 28.103 34.73 Y
28.049 34.615 L
27.577 33.602 L
27.578 33.605 27.484 33.651 27.485 33.653 C
28.107 34.989 L
28.196 35.179 28.005 35.268 V
27.815 35.357 27.726 35.166 Y
27.104 33.83 L
27.103 33.828 27.007 33.869 27.005 33.866 C
27.52 34.972 L
27.609 35.162 27.418 35.251 V
27.228 35.34 27.139 35.149 Y
26.437 33.642 L
26.389 33.539 26.298 33.537 26.258 33.564 C
26.152 33.636 26.208 33.824 26.179 33.988 C
26.134 34.238 25.983 34.403 25.824 34.406 C
25.648 34.409 25.618 34.268 25.632 34.219 C
25.66 34.124 25.705 33.965 25.758 33.713 C
25.795 33.536 25.741 33.389 Y
25.718 33.317 25.656 33.071 25.703 32.785 C
25.731 32.616 25.795 32.433 25.908 32.265 C
25.576 31.551 L
27.083 30.892 L
27.449 31.848 L
27.716 31.967 27.949 32.167 28.082 32.452 C
28.126 32.547 L
28.757 33.902 L
28.76 33.906 28.848 34.096 28.658 34.184 C
f
0 D
0.074525 0.520378 0.746914 0 0.937255 0.588235 0.270588 Xa
26.348 33.557 m
26.388 33.569 26.408 33.593 26.423 33.615 C
26.591 33.507 26.812 33.343 26.914 33.072 C
27.046 32.721 26.968 32.445 26.886 32.274 C
26.82 32.136 26.714 32.106 26.787 32.321 C
26.879 32.591 26.93 33.187 26.332 33.526 C
26.277 33.556 L
26.278 33.556 26.314 33.547 26.348 33.557 c
f
1 D
0.042054 0.170016 0.691768 0 1 0.862745 0.364706 Xa
11.397 15.627 m
11.321 15.691 11.195 15.798 11.012 15.979 C
10.883 16.107 10.847 16.258 Y
10.826 16.331 10.742 16.57 10.544 16.782 C
10.427 16.908 10.273 17.025 10.085 17.101 C
9.969 17.88 L
8.349 17.596 L
8.573 16.597 L
8.417 16.35 8.333 16.055 8.38 15.743 C
8.396 15.639 L
8.62 14.161 L
8.651 13.954 8.859 13.985 v
9.067 14.016 9.035 14.224 Y
8.9 15.11 L
8.902 15.095 9.008 15.097 9.01 15.084 C
9.208 13.774 L
9.239 13.567 9.447 13.598 V
9.654 13.629 9.623 13.837 Y
9.604 13.963 L
9.437 15.068 L
9.437 15.065 9.541 15.078 9.542 15.077 C
9.763 13.62 L
9.794 13.413 10.002 13.444 V
10.209 13.475 10.178 13.683 Y
9.958 15.14 L
9.958 15.142 10.061 15.161 10.06 15.164 C
10.242 13.958 L
10.273 13.751 10.481 13.782 V
10.688 13.813 10.657 14.021 Y
10.408 15.665 L
10.391 15.777 10.465 15.83 10.514 15.829 C
10.642 15.828 10.699 15.64 10.814 15.52 C
10.99 15.337 11.207 15.283 11.341 15.368 C
11.489 15.46 11.436 15.595 11.397 15.627 C
f
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
25.814 32.271 m
23.755 27.95 23.512 27.81 V
23.293 27.684 21.793 27.852 19.813 27.456 C
17.834 27.06 17.069 27.611 15.044 27.531 C
13.868 27.485 12.631 27.079 11.817 26.883 C
10.58 26.584 8.541 23.646 7.969 22.623 C
7.526 21.832 7.548 20.943 7.642 20.251 C
7.72 19.673 7.7 18.765 8.462 16.841 C
10.181 17.122 L
9.892 20.905 10.138 21.314 V
10.24 21.483 11.461 23.433 12.441 23.787 C
20.629 24.172 L
24.004 24.657 24.931 25.339 V
25.639 25.86 27.428 31.59 Y
25.814 32.271 L
f
0 D
0.042054 0.170016 0.691768 0 1 0.862745 0.364706 Xa
15.546 30.143 m
15.721 30.315 15.953 30.432 16.217 30.457 C
16.83 30.521 17.377 30.074 17.439 29.46 C
17.758 26.307 L
17.819 25.696 17.374 25.147 16.761 25.086 C
16.146 25.023 15.6 25.47 15.539 26.083 C
15.219 29.236 L
15.184 29.586 15.314 29.912 15.546 30.143 C
f
19.243 31.704 m
19.243 29.855 17.934 28.356 16.316 28.356 c
14.698 28.356 13.387 29.855 13.387 31.704 c
13.387 33.552 14.698 35.051 16.316 35.051 c
17.934 35.051 19.243 33.552 19.243 31.704 c
f
0.001648 0.427039 0.812619 0 1 0.67451 0.2 Xa
17.89 33.982 m
16.75 32.912 15.541 32.727 V
14.818 31.556 14.773 30.88 V
14.323 31.961 13.963 31.78 V
13.603 31.6 13.467 30.925 13.783 30.475 C
14.098 30.024 14.488 29.249 14.146 29.472 C
13.457 29.922 13.356 30.24 13.17 30.542 C
13.043 30.748 12.745 31.485 12.705 32.704 C
12.681 33.425 12.937 34.82 14.412 35.561 C
15.69 36.205 17.699 35.876 18.643 35.202 C
19.588 34.526 19.823 32.822 19.237 32.146 C
19.152 32.776 18.749 33.286 V
18.523 33.569 17.89 33.982 Y
f
1 D
0.156497 0.924987 0.668116 0 0.866667 0.180392 0.266667 Xa
12.407 26.526 m
12.407 17.273 L
19.49 17.297 L
20.115 20 20.524 21.846 V
20.998 23.981 19.445 27.238 Y
18.363 27.346 L
18.151 28.357 L
17.095 27.957 L
16.944 26.206 L
16.488 27.872 L
14.94 28.007 L
14.756 26.94 L
12.407 26.526 L
f
*u
0.786709 0.201053 1 0 0.090196 0.607843 0 Xa
11.781 26.407 m
12.469 23.964 12.166 18.907 V
14.394 18.945 16.129 19.639 Y
16.275 21.558 15.901 23.254 V
15.355 25.723 14.796 27.175 Y
11.781 26.407 L
f
18.297 27.653 m
18.92 24.382 18.781 22.429 V
18.641 20.476 18.546 19.735 Y
18.987 19.249 20.116 19.269 V
20.583 20.491 20.868 22.948 20.811 24.452 C
20.752 26.037 19.809 27.579 Y
18.297 27.653 L
f
12.407 17.273 m
11.8 10.278 11.425 8.96601 V
11.091 7.79801 7.626 2.22401 Y
9.272 1.81801 10.855 2.13 V
14.018 5.966 14.845 7.818 V
15.085 8.357 16.68 13.339 Y
18.392 11.431 19.543 9.74 V
20.271 7.737 19.633 2.298 Y
21.116 1.986 22.532 2.256 V
23.391 7.653 23.183 9.944 V
23.15 10.311 23.08 10.994 22.938 11.253 C
22.319 12.376 20.975 14.484 20.116 15.425 C
19.342 16.272 19.491 17.298 Y
12.407 17.273 L
f
*U
*u
0.235843 0.190494 0.166537 0 0.8 0.792157 0.8 Xa
11.781 26.407 m
12.469 23.964 12.166 18.907 V
14.394 18.945 16.129 19.639 Y
16.275 21.558 15.901 23.254 V
15.355 25.723 14.796 27.175 Y
11.781 26.407 L
f
18.297 27.653 m
18.92 24.382 18.781 22.429 V
18.641 20.476 18.546 19.735 Y
18.987 19.249 20.116 19.269 V
20.583 20.491 20.868 22.948 20.811 24.452 C
20.752 26.037 19.809 27.579 Y
18.297 27.653 L
f
12.407 17.273 m
11.8 10.278 11.425 8.96601 V
11.091 7.79801 7.626 2.22401 Y
9.272 1.81801 10.855 2.13 V
14.018 5.966 14.845 7.818 V
15.085 8.357 16.68 13.339 Y
18.392 11.431 19.543 9.74 V
20.271 7.737 19.633 2.298 Y
21.116 1.986 22.532 2.256 V
23.391 7.653 23.183 9.944 V
23.15 10.311 23.08 10.994 22.938 11.253 C
22.319 12.376 20.975 14.484 20.116 15.425 C
19.342 16.272 19.491 17.298 Y
12.407 17.273 L
f
*U
0 D
0.768429 0.659205 0.567041 0.141054 0.294118 0.329412 0.364706 Xa
-2.81655 1.92386 m
F
q
*u
1 D
11.781 26.407 m
12.469 23.964 12.166 18.907 V
14.394 18.945 16.129 19.639 Y
16.275 21.558 15.901 23.254 V
15.355 25.723 14.796 27.175 Y
11.781 26.407 L
h
W
n
18.297 27.653 m
18.92 24.382 18.781 22.429 V
18.641 20.476 18.546 19.735 Y
18.987 19.249 20.116 19.269 V
20.583 20.491 20.868 22.948 20.811 24.452 C
20.752 26.037 19.809 27.579 Y
18.297 27.653 L
h
W
n
12.407 17.273 m
11.8 10.278 11.425 8.96601 V
11.091 7.79801 7.626 2.22401 Y
9.272 1.81801 10.855 2.13 V
14.018 5.966 14.845 7.818 V
15.085 8.357 16.68 13.339 Y
18.392 11.431 19.543 9.74 V
20.271 7.737 19.633 2.298 Y
21.116 1.986 22.532 2.256 V
23.391 7.653 23.183 9.944 V
23.15 10.311 23.08 10.994 22.938 11.253 C
22.319 12.376 20.975 14.484 20.116 15.425 C
19.342 16.272 19.491 17.298 Y
12.407 17.273 L
h
W
n
*U
1 Ap
0 D
0 O
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
24.7405 18.3914 m
5.65525 18.3914 L
5.65525 28.5301 L
24.7405 28.5301 L
24.7405 18.3914 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
29.2349 -1.3975 m
5.03596 -1.3975 L
5.03596 18.0652 L
29.2349 18.0652 L
29.2349 -1.3975 L
h
W
n
*u
0 Ap
1 D
0 O
0.235843 0.190494 0.166537 0 0.8 0.792157 0.8 Xa
11.78 26.3931 m
12.468 23.9501 12.165 18.8931 V
14.393 18.9311 16.128 19.6251 Y
16.274 21.5441 15.9 23.2401 V
15.354 25.7091 14.795 27.1611 Y
11.78 26.3931 L
f
18.296 27.6391 m
18.919 24.3681 18.78 22.4151 V
18.64 20.4621 18.545 19.7211 Y
18.986 19.2351 20.115 19.2551 V
20.582 20.4771 20.867 22.9341 20.81 24.4381 C
20.751 26.0231 19.808 27.5651 Y
18.296 27.6391 18.296 27.6391 V
f
12.406 17.2591 m
11.799 10.2641 11.424 8.95208 V
11.09 7.78408 7.62498 2.21008 Y
9.27098 1.80408 10.854 2.11608 V
14.017 5.95208 14.844 7.80408 V
15.084 8.34308 16.679 13.3251 Y
18.391 11.4171 19.542 9.72608 V
20.27 7.72308 19.632 2.28408 Y
21.115 1.97208 22.531 2.24208 V
23.39 7.63908 23.182 9.93008 V
23.149 10.2971 23.079 10.9801 22.937 11.2391 C
22.318 12.3621 20.974 14.4701 20.115 15.4111 C
19.341 16.2581 19.49 17.2841 Y
12.406 17.2591 L
f
*U
Q
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
