%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 24.3.0
%%For: (Neko) ()
%%Title: (1f44f.ai)
%%CreationDate: 7/14/2021 12:10 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 36 36
%%HiResBoundingBox: 0.034602 0.051998 35.9835 35.9572
%%DocumentProcessColors: Cyan Magenta Yellow
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([\714\727\660\746\711\653])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 18.5 17.5 18.5 17.5
%AI3_TileBox: -279.6378 -402.9751 315.6822 438.9449
%AI3_DocumentPreview: None
%AI5_ArtSize: 36 36
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -792 474 1 1543 917 26 0 0 56 108 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-237 -239
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 27071 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD5FFFC2C2BBC2CAFD7AFFBCBBBBC1BBBBCAFD78FFC9BBBBC1BBC2
%BBC9FD45FFCACFC9CFCAFD2EFFC298BBBBBB99BBC2FD12FFCAC2C2A1FD2D
%FFCFC8CDC7CDC7CDCEFD2DFFBBC2BBC2BBC2BBC9FD11FFC9FD04BBC2FD2B
%FFCFC7C8C7CDC8C8C7C8C8CFFD2AFFC3BBBBC1FD04BBCAFD10FFC398FD05
%BBC3FD29FFCFC7CDC8CDC8CDC8CDC8CDC8FD2AFFC2BBC1BBC2BBBBBBFD10
%FFC9BBC1BBC2BBC1BBC3FD29FFC7C8C7C8C7C8C7C8C7C8C7C8C7CFFD27FF
%CF99BBBBBB99BBBBC3FD0FFFC398BBBBBB99BBBBBBA0FD1FFFCFC2C9C2C9
%CFFFFFFFCECDC8CDC8CDC8CDC8CDC8CDC8CDC8FD27FFC3C1BBC2BBC2BBC1
%CAFD0EFFC9BBC2BBC2BBC2BBC1BBCFFD1DFFCAC299C19FC199C1C2FFFFCD
%C7C8C7CDC8C8C7CDC8C8C7CDC8C8C7CFFD25FFC2BBC1FD04BBBCFD0EFFC3
%BBBBBBC1FD05BBC9FD1DFFCAC2C1C29FC2C1C29FC1C2CFC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8FD25FFBBC1BBC2BBC1BBC9FD0DFFC3BBC2BBC1BB
%C2BBC1BBC9FD1DFFCAC199C29FC199C19FC199C19FC8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7CFFD22FFA0BBBBBB99BBBBBBCAFD0CFFC3BABB99BB
%BBBB99BBBBC3FD1EFFC9C1C2C1C2C1C2C1C2C1C2C1C2C8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8FD22FFC2BBC2BBC2BBBBC2FD0CFFC9BBC2BBC2
%BBC2BBC2BBC9FD1EFFCF9FC19FC2C1C29FC29FC19FC29FC8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7C8C8CFFD20FFFD05BBC1BBC9FD0BFFC398FD04
%BBC1BBBBBAC9FD1FFFC9C1C1C8C8CDC8CDC7C8C1C29FC2C1C8C8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8FD20FFC2BBC2BBC1BBC2CFFD0AFFC9BB
%C1BBC2BBC1BBC2BBC9FD20FFC99FCDC8C8C7C8C7C8C7C89FC199C19FC8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CFFD1EFFC9BB98BBBBBBA0FD
%0AFFC398BBBBBB99BBBBBB98C9FD21FFC9CDC8CDC8CDC8CDC8CDC8C8C1C2
%C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8FD13FFCFCEC8CE
%C8CFFD06FFC9C2BBC2C3FD0AFFC9BBC2BBC2BBC2BBC1BBC9FD21FFCFC8C7
%CDC8C8C7CDC8C8C7CDC8C89FC29FC19FCDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CFFD10FFC8C8C7C8C7C8C7CDC9FD12FFC9BBBBBBC1FD05BB
%C9FD1BFFCFFD06FFCEC7CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C1CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8FD0FFFC8CDC8CDC8CDC8CDC7
%CDCEFD11FFBBC1BBC1BBC2BBC1BBC9FD19FFCAC99FC19FC2A0FFFFFFC7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C8C899C19FC19FCDC7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7CFFFFFCACAA7C9A7FD05FFC8C8C7C8C7C8C7C8C7C8
%C7C8C9FD0FFFCABB99BBBBBB99BBBBC3FD19FFC9C29FC2C1C2C1C1C1CACF
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C1CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8FFC9C8C1C19FC2C1C9FFFFCFCDC8CDC8CDC8
%CDC8CDC8CDC8CDC9FD0FFFBBC2BBC2BBC2BBC9FD19FFA7C19FC19FC29FC1
%9FC199C8C8CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C89FC19FC2C1C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C199C29FC19FC199C2CACEC7C8
%C7CDC8C8C7CDC8C8C7CDC8C8C9FD0EFFC998BBBBBBBAC9FD19FFCFC29FC2
%C1C29FC2C1C29FC2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2
%9FC2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C29FC2
%C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD0EFFC9BBC2BBC9FD1AFF
%C899C199C19FC199C19FC199C1C1C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C89FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CDC7C199
%C19FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C9FD0FFFCAFD1C
%FFC1C2C1C2C1C2C1C2C1C2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8C8C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%C8C1C2C1C2C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDCEFD2AFFCA
%C19FC19FC29FC19FC29FC19FC29FC8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C89FC29FC19FCDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%C29FC19FC29FC8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C8C9FD29FFCF
%9FC2C1C29FC2C1C29FC2C1C29FC2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8C89FC2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8C8C1C29FC2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD28FF
%CAC199C19FC199C19FC199C19FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C8C89FC19FC19FCDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C899C199C1C1C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C9FD
%19FFA7C3C2C3CAFD0AFFC2C2C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1C8C8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC1C2C1C2C1CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC9FD15FFCAC9BBC1BBBBBBC2CAFD09FFCA99C29FC19F
%C29FC19FC29FC19FC29FC199C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7C89FC19FC2C1C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C299
%C29FC1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C9FD11FFCAC9FD
%05BBC1BBBBBAC2FD0AFFC999C2C1C29FC2C1C29FC2C1C29FC2C1C29FC8C8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C29FC2C1CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC9FD0EFFC9BCC1BBBBBBC2BBC1BBC2BBC1BBFD0AFF
%CFC299C19FC199C19FC29FC89FC299C19FC199C8C8C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C89FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7CDC7C299C199C1A5CDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C8FD0BFFCAC2BABB99BBBBBB99BBBBBB99BBBBBBFD0CFFC9C1C2C1C2C1C8
%C8CDC8CDC8CDC1C2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8C8C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2
%C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD0AFFC2BBC2BB
%C2BBC2BBC2BBC2BBC2BBBBC2FD0DFFC999C19FCDC8C8C7CDC8C8C7CDC1C1
%9FC29FC8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C89FC29FC19FCD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C89FC199C2C7C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7C8C9FD09FFFD05BBC1BBBBBBC1FD04BBC2
%FD0FFFC9C1CDC8CDC8CDC8CDC8CDC8CDC8C29FC2C1C8C8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8C8C1C29FC2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC9FD07FFCFC1BBC2BBC1BBC2FD05BBC3CAFD10FFCAC8C7C8C7C8C7C8
%C7C8C7C8C7CDC1C199C199C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C8C89FC19FC19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C899C1
%99C2C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C9FD07FFBCBB99BB
%BBBB99BBBBC2A1FD0EFFCAFD04FFCFC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7
%C2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC1C2C1C2C1
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD07FFFD05BBC2C9FD0DFFCFA0C2
%9FC19FC9CAFFC9C8C8C8C7CDC8C8C7CDC8C8C7CDC8C89FC29FC199C8C8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C89FC19FC29FC8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C299C29FC1C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C9FD07FFC3C9C3CFFD0EFFCFC1C19FC2C1C19FC2C9CE
%C7CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC1C2C1C29FC8C8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8C8C1C29FC2C1CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8C89FC2C1C2C7CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC9FD17FFCA99C19FC199C19FC199C1C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C89FC19FC199C8C8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C89FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CDC7C299C19F
%C19FCDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C8FD16FFC1C2C1C2C1
%C2C1C2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C2C1C2C1
%C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C1CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC9FD14FFC2C19FC29FC19FC29FC19FC29FC8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC1C19FC29FC8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C89FC29FC19FCDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7C89FC199C2C7CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7C8C9FD12FFCFC2C1C29FC2C1C29FC2C1C29FC2C8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8C29FC2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8C89FC2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8C8C1C29FC2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD11
%FFCA99C19FC199C19FC199C19FC199C1C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7CDC1C199C199C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C8C89FC19FC19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C899C1
%99C1C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C9FD10FFCAC2C1C2
%C1C2C1C2C1C2C1C2C1C2C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC7C2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC1C2
%C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD10FF9FC29FC19FC29FC1
%9FC29FC19FC29FC1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C89FC2
%9FC199C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C89FC19FC29FC8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C89FC29FC1C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C9FD0FFFC89FC2C1C29FC2C1C29FC2C1
%C29FC2C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC1C2C1C29F
%C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C29FC2C1CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C7CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC9FD0EFFC9C199C19FC199C19FC199C19FC199
%C199C1A5CDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC19FC199C8C8
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC199C19FC8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC299C19FCDC7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C9FD0EFFC2C1C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1
%C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C2C1C2C1C8C8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C1CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDCFFD0EFFA0C19FC19FC29FC19FC29FC19FC29FC199C2C7
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7C199C29FC8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C89FC29FC1C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CEFD0FFFC2C1C1C29FC2C1C29FC2C1C29FC2C1C29FC2C8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C29FC2C1C8C8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8C89FC8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C7CFFD0FFFA0C19FC199C19FC199C19FC199C19FC199C2C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7CDC1C199C199C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7CDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7FD10
%FFC9C1C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1C2C8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8C2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC9FD10FFC9C199
%C29FC19FC29FC19FC29FC19FC29FC1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8CDC1C29FC199C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C8CAFD10FFC9C19FC2C1C29F
%C8C8C8C7C8C1C29FC2C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC7C2C1C29FC8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD11FFC9C199C19FC8C7CDC8C8C7CD
%C7C199C199C1A5CDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC19FC1
%99C8C8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7CFFD11FFCAC2C1CDC8CDC8CDC8CDC8CDC8C8C1C2C1
%C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C2C1C2C1C8C8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC9FD12FFC9C8C8C8C7CDC8C8C7CDC8C8C7C89FC199C2C7CDC7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7C199C29FC8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDCFFD11
%FFCFC7CDC8CDC8CDC8CDC8CDC8CDC8C8C1C29FC2C8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8C29FC2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CFFD0BFFA7CACAFFFF
%FFC8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C899C199C1C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7CDC1C199C199C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C8FD08FFCFC9C1C2C1
%C2C2CFCFCDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C2C1C2C1C8C8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDCFFD06FFC9
%C299C19FC29FC199C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C299C29F
%C1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8CDC1C29FC199C8C8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CFFD05FFCAC19FC2C1C29FC2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8C89FC2C1C2C7CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7C2
%C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC9FD04FFCAC299C199C19FC199C19FC1A5CDC7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7CDC7C299C19FC19FCDC7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C89FC2C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8CFFFFFFFCAC1C2C1C2C1C2C1C2C1C2C1
%C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8FD04FFA0C19FC19F
%C29FC19FC29FC19FC8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C89F
%C199C2C7CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8CA
%FFFFFFC29FC2C1C29FC2C1C29FC2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8C8C1C29FC2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC7CFFFFFFF9FC199C19FC199C19FC199C19FC19FC8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C899C199C1C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C9FFFFFFC9C1C2C1C2C1C2C1C2C1C2
%C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CEFFFFFFC9C19F
%C29FC19FC29FC19FC29FC19FC29FC8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C299C29FC1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%C8C8FD04FFC2C19FC2C1C29FC2C1C29FC2C1C29FC2C1CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8C89FC2C1C2C7CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC7CEFD04FFCF99C199C19FC199C19FC199C19FC199C19F
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CDC7C299C19FC19FCDC7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C8FD05FFCFC1C2C1C2C1C2C1C2C1C2
%C1C2C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2
%C1C2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD06FFCA99C19FC1
%9FC29FC19FC29FC19FC29FC19FCDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7C89FC199C2C7CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C8FD07FF
%CF9FC1C1C29FC2C1C29FC2C1C29FC2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8C8C1C29FC2C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CEFD08FFCF9FC19FC199C19FC199C19FC199C19FC19FC8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C899C199C1C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C8FD0AFFC2C1C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8C8C1C2C1C2C8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CEFD0BFFA0C19FC29FC19FC29FC19FC29FC19FC29FC8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C899C2C1C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7C8C9FD0CFFC2C19FC2C1C29FC2C1C29FC2C1C29FC2C1CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8C89FC8C8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC7CEFD0DFFA0C199C19FC199C19FC199C19FC199C19FC8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C9FD0EFFC2C1C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD
%0FFFA0C19FC19FC29FC19FC29FC19FC29FC19FC8C8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C8FD10FFC9C1
%C1C29FC2C1C29FC2C1C29FC2C1C29FCDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDFD11FFA1C19FC199C19F
%C199C19FC199C19FC19FC8C8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7CFFD11FFC9C1C1C2C1C2C1C2C1C2C1C2
%C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8FD12FFC9C199C29FC19FC29FC19FC29FC19FC29FC8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C9FD12FFCAC19FC2C1C29FC2C1C29FC2C1C29FC2C1C8C8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDFD13FFCA
%C199C29FC199C19FC199C19FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CFFD13FFCAC2C1C2C1C2C1C2
%C1C2C1C2C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8FD14FFCAC299C19FC29FC19FC29FC19FC29FC1
%9FC8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8FD0AFFCAC2C2C2FD07FFCAC8C1C29FC2C1C29FC2C1C29FC2C1C29FCD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8FD
%06FFCACAC2C299BBBBBB99CFFD06FFCAC299C199C19FC199C19FC199C19F
%C19FC8C8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8FD05FFC3C2BBBBBBC2BBC2BBC1C2FD08FFC99FC2C1C2C1C2C1C2C1C2C1
%C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC9FFFFC3C2FD07BBC1BBBBBBC1CAFD08FFC899C29FC19FC29FC19FC29F
%C19FC29FC8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CFFFBBBBBBC2BBC1BBC2BBC1BBC2BBBBBBFD0AFFC999C2C1C29FC2C1C29F
%C2C1C29FC2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7
%CEFF9ABBBBBB99BBBBBB99BBBBBB99BBBAC3FD0BFFC999C19FC199C19FC1
%99C19FC199C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CE
%FFFFC2BBC2BBC2BBC2BBC2BBC2BBC1BBC2FD0DFFC9C1C2C1C2C1C2C1C2C1
%C2C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFFFFFF
%BBC1BBBBBBC1FD06BBC2CAFD0FFFCA9FC19FC29FC19FC29FC19FC29FC19F
%C8C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7CEFD04FFC2BBC2BBC1BBBBBB
%C1C2CAFD13FFCFC1C19FC2C1C29FC2C1C29FC2C1C29FCDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC7CEFD05FFCAC292BBBBBB9AC9CAFD16FFCA99C199C19F
%C199C19FC199C19FC19FC8C8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C9FD08FFCAC3
%CACAFD1AFFCFC1C2C1C2C1C2C1C2C1C2C1C2C1C2C1CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC7CEFD28FFCF9FC19FC19FC29FC19FC29FC19FC29FC8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CEFD2BFF9FC1C1C29FC2C1C29FC2C1C29FC2C1C8C8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7
%CEFD2DFF9FC19FC199C19FC199C19FC199C19FC8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CEFD1DFFCA
%FD11FFC2C1C1C2C1C2C1C2C1C2C1C2C1C2C1CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC3BBBBBB
%C3FD10FFA0C19FC29FC19FC29FC19FC29FC19FC8C8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7CEFD1CFFC2BBC2BBBB
%BAC9FD10FFC2C19FC2C1C29FC2C1C29FC2C1C29FC8C8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC2BABB99BBBB
%BB99FD11FFA0C199C19FC199C19FC199C19FC199C8C8C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C9FD1CFFC3BBC2BBC2BBC2BB
%C2CAFD11FFC9C1C1C2C1C2C1C2C1C2C1C2C1C2C1C8C8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8
%CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC2BAC1BBBBBBC1BBBBBB
%FD13FFA1C19FC19FC29FC19FC29FC19FC29FC2C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CEFD1CFFC2BBC1BBC2BBC1BBC2BBCAFD0AFF
%CACFCFFD07FFC9C2C1C29FC2C1C29FC2C1C29FC2C1C2C7CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC298BBBBBB99BBBBBB98C9FD0A
%FFA0BBBBBBA1FD07FFA7C299C199C19FC199C19FC199C19FC19FC8C8C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7CEFD1CFFC2BBC2BBC2BBC2BBC1BBC9FD
%0AFFC2BBBBC2BBBBC9FD07FFCFC89FC2C1C2C1C2C1C2C1C2C1C2C1C2C1C8
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC2BBBBBBC1FD05BBC9FD0A
%FFCABBBBC1BBBBBBC2FD09FFC999C19FC19FC29FC19FC29FC19FC29FC19F
%C8C8CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C8C7CDC8C8C7CDC7CEFD1CFFC2BBC2BBC1BBC2BBC1BBC9FD0BFF
%C9BBC1BBC2BBBBBBFD0BFFC2C1C1C29FC2C1C29FC2C1C29FC2C1C29FFD04
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8CDC8CDC7CEFD1CFFC2BABB99BBBBBB99BBBBC3FD0CFF99BBBBBB99
%BBBBC2FD0CFFA7C299C199C19FC199C19FC199C19FC199C19FC19FC8C7C8
%C7CDC8C8C7CDC7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C9FD1CFFC3BBC2BBC2BBC2BBC2BBC9FD0CFFCAC1BBC2BBC2BBBBC9FD0E
%FFCFC2C2C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1C2C1C8C1C8C1C8C8CD
%C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC2BAC1
%BBBBBBC1BBBBBAC9FD0DFFC3BAC1FD05BBFD11FFCAC99FC199C19FC19FC2
%9FC19FC29FC19FC29FC199C29FC199C29FC8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CEFD1CFFC3BBC1BBC2BBC1BBC2BBC9FD0EFFBBBBBB
%C2BBC1BBC3FD14FFCAC9A0C2C1C19FC1C1C19FC2C1C29FC2C1C29FC2C1C2
%9FC2C1C2C1C8C8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC7CEFD1CFFC992BB
%BBBB99BBBBBB98C9FD0EFFA7BBBBBB99BBBBBBA1FD17FFA8CAA7C9A0C2A0
%C29FC199C199C19FC199C19FC199C19FC199C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7CEFD1DFFC2C1BBC2BBC2BBC1BBC9FD0FFFC9BBC2BBC2BBC1BBFD
%21FFCFCFC2C2C1C2C1C2C1C2C1C2C1C2C1C2C1C2C8CDC8CDC8CDC8CDC8CD
%C8CDC7CEFD1EFFC2BBC1FD05BBC9FD10FFFD05BBC1BBC3FD24FFCAC99FC1
%99C29FC19FC29FC19FC29FC19FC8C8C8C7C8C7C8C7C8C8CEFD1FFFC9BBBB
%C2BBBBBBC9FD10FFC9BBBBC2BBC1BBBBCAFD27FFC9C29FC2C1C29FC2C1C2
%9FC2C1C29FC1C9CFC9CEC9CEC9FD22FFC2BB98BBBBC9FD11FFC3BBBB99BB
%BBBB99FD29FFCAC999C19FC199C19FC199C199C1A0FD2AFFC9C9C3CFFD12
%FFC2BBBBC2BBC2BBC9FD2CFFC9C2FD07C1C2C9FD41FFC9BABBBBC1BBBBC9
%FD2EFFCFA7C9C2C9A1CFFD43FFCAC2FD04BBC2FD7AFFCAC3BBC2A0FD5EFF
%FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (\315\274\317\361\303\350\304\241) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.929412 0.87924 0.890196 0.799985 ([\714\727\660\746\711\653]) 0 Xs
([\714\727\660\746\711\653])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\315\274\262\343 1) Ln
0 A
1 D
0 O
0.074525 0.520378 0.746914 0 0.937255 0.588235 0.270588 Xa
0 J 0 j 1 w 10 M []0 d0 XR
32.302 11.653 m
31.607 12.663 31.995 14.123 31.822 15.735 C
31.644 18.365 30.514 20.913 28.322 22.951 C
20.856 29.893 L
19.385 31.262 18.015 29.79 V
16.647 28.319 18.119 26.95 Y
21.273 24.016 L
24.007 21.474 L
23.322 20.738 20.296 23.552 V
10.076 33.058 L
8.603 34.426 7.234 32.954 V
5.866 31.483 7.337 30.114 Y
17.001 21.125 L
16.98 21.145 16.27 20.433 16.257 20.445 C
5.917 30.062 L
4.445 31.431 3.076 29.959 v
1.707 28.487 3.179 27.119 Y
13.52 17.5 L
13.532 17.488 12.866 16.736 12.886 16.717 C
3.966 25.015 L
2.494 26.384 1.125 24.912 v
-0.243999 23.44 1.228 22.071 Y
10.712 13.251 L
10.799 13.17 10.212 12.343 10.321 12.242 C
3.487 18.598 L
2.015 19.967 0.646001 18.494 V
-0.722999 17.022 0.749001 15.653 Y
11.896 5.29 L
13.757 3.559 15.668 2.683 17.972 2.362 C
18.441 2.297 19.041 2.297 19.287 2.266 C
20.064 2.168 20.746 1.892 21.659 1.332 C
22.834 0.612 24.597 0.312 25.61 1.395 C
29.064 5.09 L
32.253 8.502 L
33.265 9.584 33.084 10.518 32.302 11.653 C
f
*u
0 D
0 0.679866 0.74374 0 0.980392 0.454902 0.243137 Xa
1.956 0.973999 m
1.7 0.973999 1.444 1.072 1.249 1.267 c
0.858 1.658 0.858 2.29 1.249 2.681 C
4.8 6.23 L
5.191 6.621 5.823 6.621 6.214 6.23 c
6.605 5.839 6.605 5.207 6.214 4.816 C
2.663 1.266 L
2.468 1.071 2.212 0.973999 1.956 0.973999 c
f
8.702 0.051998 m
8.593 0.051998 8.481 0.07 8.371 0.107998 C
7.85 0.289997 7.575 0.859997 7.758 1.382 C
8.729 4.155 L
8.911 4.676 9.482 4.95 10.003 4.769 C
10.524 4.586 10.799 4.016 10.616 3.495 C
9.645 0.722 L
9.501 0.310001 9.115 0.052002 8.702 0.051998 c
f
1.035 7.719 m
0.623 7.719 0.237 7.976 0.092 8.386 C
-0.092 8.907 0.181 9.478 0.702 9.662 C
3.197 10.543 L
3.72 10.723 4.289 10.452 4.473 9.933 C
4.657 9.412 4.384 8.841 3.863 8.657 C
1.368 7.776 L
1.257 7.737 1.145 7.719 1.035 7.719 c
f
30.495 29.486 m
30.239 29.486 29.983 29.584 29.788 29.779 c
29.397 30.17 29.397 30.803 29.788 31.194 C
33.34 34.744 L
33.731 35.134 34.363 35.134 34.754 34.744 c
35.145 34.354 35.145 33.72 34.754 33.329 C
31.202 29.779 L
31.007 29.583 30.751 29.486 30.495 29.486 c
f
26.331 31.183 m
26.222 31.183 26.11 31.202 26.001 31.24 C
25.48 31.422 25.205 31.992 25.387 32.514 C
26.357 35.287 L
26.54 35.808 27.109 36.083 27.631 35.901 C
28.152 35.719 28.427 35.149 28.245 34.627 C
27.275 31.854 L
27.131 31.441 26.744 31.183 26.331 31.183 c
f
32.474 25.409 m
32.062 25.409 31.676 25.666 31.531 26.076 C
31.347 26.597 31.621 27.168 32.141 27.352 C
34.635 28.233 L
35.157 28.418 35.727 28.143 35.911 27.623 C
36.095 27.102 35.821 26.531 35.301 26.347 C
32.807 25.466 L
32.696 25.427 32.584 25.409 32.474 25.409 c
f
*U
1 D
0.039887 0.178042 0.689662 0 1 0.858824 0.368627 Xa
35.39 12.178 m
34.729 13.21 35.166 14.657 35.048 16.274 C
34.958 18.908 33.915 21.493 31.793 23.604 C
24.565 30.793 L
23.141 32.21 21.722 30.785 V
20.305 29.361 21.73 27.943 Y
24.784 24.904 L
27.43 22.272 L
26.72 21.56 23.791 24.474 V
20.86 27.389 13.897 34.319 Y
12.472 35.736 11.054 34.311 V
9.636 32.887 11.061 31.47 Y
20.417 22.16 L
20.397 22.18 19.663 21.493 19.65 21.506 C
9.64 31.466 L
8.215 32.884 6.797 31.459 V
5.38 30.034 6.804 28.617 Y
16.815 18.655 L
16.827 18.643 16.135 17.914 16.155 17.894 C
7.52 26.487 L
6.095 27.904 4.677 26.479 v
3.259 25.054 4.684 23.636 Y
13.865 14.501 L
13.949 14.418 13.335 13.61 13.44 13.505 C
6.824 20.088 L
5.399 21.505 3.981 20.08 v
2.563 18.655 3.988 17.237 Y
14.778 6.505 L
16.58 4.712 18.46 3.773 20.752 3.374 C
21.219 3.293 21.819 3.273 22.063 3.234 C
22.836 3.11 23.508 2.811 24.403 2.22 C
25.553 1.461 27.305 1.102 28.354 2.15 C
31.931 5.726 L
35.233 9.028 L
36.282 10.078 36.133 11.018 35.39 12.178 C
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
