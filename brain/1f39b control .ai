%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 24.3.0
%%For: (Neko) ()
%%Title: (1f39b control .ai)
%%CreationDate: 2/7/2021 5:24 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 36 36
%%HiResBoundingBox: 0 0 36 36
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([\714\727\660\746\711\653])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 18.5 17.5 18.5 17.5
%AI3_TileBox: -279.6378 -402.9751 315.6822 438.9449
%AI3_DocumentPreview: None
%AI5_ArtSize: 36 36
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -931 485 1 1543 917 26 0 0 56 108 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-941 -523
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 28176 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0BFFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA9FD12FFA8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A9A8FD0EFFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8FD0AFFA8A884FD74A8FD09FFAF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FD
%06FFA9A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8FD05FFAFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8FD04FFFD7DA8FFFFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFFFA8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A9A8
%AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A9A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8FFFFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8A87D7D84FFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8A87D7D84FFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA9FD1EA852522E537DA9FD3AA852522E537D
%A9FD1AA884A9AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8
%AFA8AFA8FF7D5952595284A8AFA8AFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%FFA8AFA8AFA8AFA8FF7D5952595284A8AFA8AFA8AFA8FFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9FD
%04A87D84A8A9A8A8A8A9A87E2E5352527DAFA8A8A8A9A8A87D7E84A9A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9FD04A87D84A8A9A8A8A8A9A87E2E5352527DAFA8A8A8A9A8A87D7E84
%A9A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A85253527EA8AFA8A9A8AFA87D525959A9A8AFA8A9A8AF
%7D5352597EAFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A85253527EA8AFA8A9A8AFA87D525959A9A8AF
%A8A9A8AF7D5352597EAFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9FD13A852
%52525352FD06A8A9A8847DFD07A87E5352532E7DFD24A85252525352FD06
%A8A9A8847DFD07A87E5352532E7DFD12A8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8FFA87D52595259A8FFA8AFA8AFA8AFA8FFA8AFA8AFA8AFA8A95259
%525959AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8FFA87D52595259A8FFA8AFA8AFA8AFA8FFA8AFA8AFA8AF
%A8A95259525959AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8AF7D522E527DA8A8A9A8AFA8AFA8A8A8A9A8
%AFA8AFA8A8A87D2E522E84A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AF7D522E527DA8A8A9A8AFA8AFA8
%A8A8A9A8AFA8AFA8A8A87D2E522E84A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF847E7DAFA8FFA8A8
%7D52FD052752527D84FFA9AFA8A87DA8A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF847E7DAFA8FF
%A8A87D52FD052752527D84FFA9AFA8A87DA8A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFFD14A8A9A8A9A8AF7D52FD0CF8277EA8A9A8AFFD27A8A9A8
%A9A8AF7D52FD0CF8277EA8A9A8AFFD14A8AFA8AFA8AFA8AFA8AFA8AFA8FF
%A8AFA8AFA8AFA8AFA9A827FD10F8527EFFA8AFA8AFA8AFA8FFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8AFA8AFA8AFA9
%A827FD10F8527EFFA8AFA8AFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFFD04
%A8A9A8A8A8A9FD04A87DA8A8A9A8A8A8AFA87DFD07F805F827F827F805FD
%06F852FFA8A8A8A9A8A97E8484A9A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9FD04A87DA8A8A9A8A8A8AFA87DFD07F805F827F827F805FD06F852FF
%A8A8A8A9A8A97E8484A9A8A9A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8
%A8525952A8A8AFA8AFA852FD05F8FD0B2705FD05F852FFA8A9A8FF7E5952
%597EAFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A8525952A8A8AFA8
%AFA852FD05F8FD0B2705FD05F852FFA8A9A8FF7E5952597EAFA8AFA8A9A8
%AFA8A9FD0BA85252525352A8A8A9A852FD05F82727270027052700270527
%00270527FD04F827AFA8A8845952532E59FD14A85252525352A8A8A9A852
%FD05F827F827002705270027052700270527FD04F827AFA8A8845952532E
%59FD0AA8AFA8AFA8AFA8AFA8FFA85952595259A8FFAF53F8F8F8052728FD
%1027FD04F852FFA8AF5359525952A9A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8FFA85952595259A8FFAF53F8F8F8002727527D28FD0D27FD04F852FF
%A8AF5359525952A9A8AFA8AFA8AFA8AFA8A8A9A8A8A8A9A8A8A8AF7D522E
%527DA8A87DFD04F82727052727270527272705272727052727270527FD04
%F87DAFA87D2E522E7DA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AF59
%522E527DA8A87DFD04F8272728FFFFA9FD042705272727052727270527FD
%04F87DAFA87D2E522E7DA8A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8A9A8
%AF7D7D7DAFA8A9FD04F8FD1627F8F8F827A8AFA8847D84A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF7D7D7DAFA8A9FD04F827270559FFFF
%FF7DF8FD0D27F8F8F827A8AFA8847D84A8AFA8A9A8AFA8A9A8AFFD0CA8AF
%A8A9A8AF52FD04F827002705270027052700270527002705270027F827F8
%27F8F8F852A8A8A8A9FD17A8AFA8A9A8AF52FD04F827002727A8A8FFA852
%F827052700270527002705270527F8F8F852A8A8A8A9FD0CA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8FFA827F8F8F8FD14277D7D592727F8F8F8A9A8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA827F8
%F8F8FD052752FFAFFF84FD0F27F8F8F8A9A8AFA8AFA8AFA8AFA8AFA8AFA8
%AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A87DF8F8F827272705272727052727
%27052727270527002727A8AFFFA852FD04F852AFA8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A87DF8F8F827272705270527
%7DFFA8FF522727270527272705272727052705F8F8F853AFA8A9A8A8A8A9
%A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8AF27F8F8FD1127F8
%527DFFAFFFAFFF2827F8F8F852A8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8AF27F8F8FD082752A8FFAFAFFD0E27F8F8F8
%52A9AFA8AFA8A9A8AFA8A9A8AFA8A9FD0AA8A9A8A8A8A984FD04F8270027
%05270027052700270527F827277DA8FFA8AFA8FF52270527F8F8F8FD04A8
%A9FD13A8A9A8A8A8A984FD04F827002705270027F87DA9FFAF7DF8270527
%00270527002705270527F8F8F8FD04A8A9FD0AA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA9A8F8F8F8FD0D27052752A9FFFFAFFFAFA8FD0527F8F8F87DFFA8
%AFA8A9A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA9A8F8F8F8
%FD0A27A9FFFFAF5205FD0C27F8F8F87DFFA8AFA8A9A8AFA8AFA8AFA8AFA8
%A8A9A8A8A8A9A8A852597DA8A8FF59F8F8F8272705272727052727270527
%F8527DFFA9AFA8FF8452F82727270527F8F8F87DA8A8A8A1939AA1AFA8A8
%A8A9A8A8A8A9A8A8A8A9A8A852597DA8A8FF59F8F8F82727052727270527
%27272EFFA8FF7D27052705272727052727270527F8F8F87DA8A8A8A1939A
%A1AFA8A8A8A9A8A8A9A8AFA8A9A8A9525352537DAFA87DF8F8F8FD0C277D
%AFFFA8FFFFAF522705FD0727F8F852FFA8A18DB693B6A8AFA8A9A8AFA8A9
%A8AFA8A9A8A9525352537DAFA87DF8F8F8FD0B277DFFA9FF52FD0D27F8F8
%52FFA8A18DB693B6A8AFA8A9A8AFFD06A8A97D5352532E7DA8AF52F8F8F8
%00270527002705270027F852AFFFA8FFA87D2727F827052700270527F8F8
%F859A8A994938D948DA184FD0AA8A97D5352532E7DA8AF52F8F8F8002705
%27002705270027F827A8FFA8A8272705270027052700270527F8F8F859A8
%A994938D948DA184FD05A8AFA8AFA8AFA8A9525952597DAFA97DF8F8F8FD
%0B2752FFFFFF7D5205FD0B27F8F852FFA9C38DB693B6A8AFA8AFA8AFA8AF
%A8AFA8AFA8A9525952597DAFA97DF8F8F8FD0B27F87DFFFFAF52FD0C27F8
%F852FFA9C38DB693B6A8AFA8AFA8AFFD04A8A9FD04A8525353A9A8AF52F8
%F8F805272727052727270527272752845227F82727270527272705272727
%F8F8F87DA8AFA89A9394A1A9A8A9A8A8A8A9A8A8A8A9FD04A8525359A9A8
%AF52F8F8F80527272705272727052727270584A87DF82727270527272705
%272727F8F8F87DA8AFA89A9394A1A9A8A9A8A8A8A9AFA8A9A8AFA8A9A8AF
%A8AFA8AFA884F8F8F8FD0D27F8FD0E27F8F8F87DAFA8AFA8A8A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8AFA8AFA884F8F8F8FD0D270528FD0D27
%F8F8F87DAFA8AFA8A8A8AFA8A9A8AFA8A9FD0AA8A9A8A8A8A984FD04F827
%0027052700270527002705270027052700270527002705270527F8F8F8FD
%04A8A9FD13A8A9A8A8A8A984FD04F827002705270027052700270527F827
%052700270527002705270527F8F8F8FD04A8A9FD0AA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8FF27F8F8FD1A2728F8F8F852A8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FF27F8F8FD1A2728F8F8F852A8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A859
%F8F8F82705272727052727270527272705272727052727270527272700F8
%F8F852FFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A859F8F8F82705272727052727270527272705272727052727270527
%272700F8F8F852FFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8FFA827F8F8F8FD1927F8F8F8A8A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8FFA827F8F8F8FD1927F8F8F8
%A8A8AFA8A9A8AFA8A9A8AFA8A9A8AFFD10A8FF52FD04F827002705270027
%05270027052700270527002705270527F8F8F852FD1FA8FF52FD04F82700
%270527002705270027052700270527002705270527F8F8F852FD10A8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8F8F8F8052728FD1427F8F8F827A8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8A8F8F8F8272728FD1427F8F8F827A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9A87DFD04F80527272705272727
%052727270527272705272727FD04F852FFA8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A87DFD04F8052727270527
%2727052727270527272705272727FD04F852FFA8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA952F8F8F805FD12
%27FD04F852FFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA952F8F8F800FD1227FD04F852FFA8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9FD12A8A9A827FD05F82727270027052700270527
%00272727FD04F827AFFD23A8A9A827FD05F8272727002705270027052700
%270527FD04F827AFFD12A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FF
%A852FD05F827272827272728FD0627FD04F827FFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA852
%FD05F827272827272728FD0627FD04F827FFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A9A853FD
%07F827F827F827FD08F852AFA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A9A853FD07F827F827
%F827FD08F852AFA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8AFA8A827FD10F8277DFFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8AFA8A827FD10F8277DFFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFFD18A8AF5327FD0CF8277DA8AFFD2DA8AF5327FD0CF8
%277DA8AFFD16A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8FFA8A853522727F827F8272E7D7EFFA9AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8FFA8A852522727F827F827287D7EFFA9AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8FFA8A884A884A8A8FFA8A9A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8FFA8A884A884A8A8AFA8A9A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8AFA8AFA8AFA8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8AFA8AFA8
%AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9FD
%81A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFFD81A8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9FD81A8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFFD81A8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFFD04A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AFA8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8AF7EA8A8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8AF7EA8A8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9FD1FA859522E7DFD3CA859522E7DFD1EA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8AFA8AFA8FF7E5352
%5952A8A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8AFA8AFA8
%FF7E53525952A8A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A884A9A8A8
%A8A9A8A8A87E2E5352527DA9A8A9A8A8A8AFA8A8A8AFA8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%84A9A8A8A8A9A8A8A87E2E5352527DA9A8A9A8A8A8AFA8A8A8AFA8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8A9595953A8A8A9A8AFA8AF8459525352A8A8A9A8AFA8AF847D527DA8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8A9595953A8A8A9A8AFA8AF8459525352A8A8A9A8AFA8AF84
%7D527DA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFFD13A853FD0452FD07
%A87D7D5384FD05A8A9A8592E532E7DA8A9FD22A853FD0452FD07A87D7D53
%84FD05A8A9A8592E532E7DA8A9FD10A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA87D52595259A8AFA8AFA8AFA8FFA8AFA8AFA8AFA8AFA8A8525952
%5953AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA87D52595259A8AFA8AFA8AFA8FFA8AFA8AFA8AFA8AFA8
%A85259525953AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFFD04A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A959FD0452A9A8A8A8AFA8AFA8FFA8AFA8AFA8A8
%A8A9A8592E532E7DA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A959FD0452A9A8A8A8AFA8AFA8FFA8AFA8
%AFA8A8A8A9A8592E532E7DA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A8595959A8A8AFA9FFA8A87D7D
%527D537D7EAFA9FFA8AF847D527DA8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A8595959A8A8AFA9FF
%A8A87D7D527D537D7EAFA9FFA8AF847D527DA8AFA8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9FD15A884A8A8AFA87E2E27FD09F8527DA9A8A9A8A8A8A9FD
%26A884A8A8AFA87E2E27FD09F8527DA9A8A9A8A8A8A9FD12A8AFA8AFA8AF
%A8AFA8AFA8AFA8FFA8AFA8AFA8AFA8FFA9FF7D2EFD0EF82784A9FFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%FFA8AFA8AFA8AFA8FFA9FF7D2EFD0EF82784A9FFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8A8A9A8A8A8A9A8A8A8A9A8A9A8AFA8A8A8A9FD
%04A827FD12F852A8AFA8A9A8A8A8AFA8A8A8AFA8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A9A8AFA8A8A8A9FD04A827FD12F852A8AFA8A9A8
%A8A8AFA8A8A8AFA8A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8A9A8A97D7D
%59A9A8A9A8AFA9A8FD05F827F8FD0927FD05F8277EFFA8AFA8AFA87D537D
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8A97D7D59A9A8A9A8AF
%A9A8FD05F827F8FD0927FD05F8277EFFA8AFA8AFA87D537DA8AFA8A9A8AF
%A8A9A8AFFD0BA85352525253A9A8A8A87DFD05F827002705270027052700
%272727FD06F87DAF84A9A87D2E532E7DA8A9FD12A85352525253A9A8A8A8
%7DFD05F827002705270027052700270527FD06F87DAF84A9A87D2E532E7D
%A8A9FD08A8AFA8AFA8AFA8AFA8AFA87D5259527DA8AFA8A8FD05F8FD0E27
%282727FD04F87DFFA8A95259525952AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA87D5259527DA8AFA8A8FD05F8FD0E272E2727FD04F87DFFA8A9
%5259525952AFA8AFA8AFA8AFA8AFFD04A8A9A8A8A8A9A8A85253525252A9
%A8A8FD05F827272705272727052727270527272705272727F8F8F82784AF
%A8592E595259A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A852535252
%52A9A8A8FD05F8272727052727270527272700277DFF84280527F8F8F827
%84AFA8592E595259A8A9A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A852
%5953A8A8FF28F8F8F805FD1527F8F8F852A8FF8459527D84AFA8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A8525953A8A8FF28F8F8F805FD0D2752
%FFAFFF52272727F8F8F852A8FF8459527D84AFA8AFA8A9A8AFA8A9FD0DA8
%7EA8A8AF7DFD04F827F82700270527002705270027052700270527002727
%00F8F8F87DA8A9A8A884A9FD16A87EA8A8AF7DFD04F82705270027052700
%270527002727A8A8FFA852F8272700F8F8F87DA8A9A8A884A9FD0AA8AFA8
%AFA8AFA8AFA8AFA8AFA8FFA8AFA82EF8F8F8272752FD1627F8F827FFA8AF
%A8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA82E
%F8F8F8FD0D27057DFFFFFF7D00FD0527F8F827FFA8AFA8FFA8AFA8AFA8AF
%A8AFA8AFA8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A87EF8F8F82727A8AFA852
%27F82705272727052727270527272705272727FD04F87DAFA8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A87EF8F8F8270527
%27270527272705272727F852A8FFA8A9272705272727FD04F87DAFA8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8FF52F8F827
%2752FD04FF7E5205FD1127F8F8F852A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8FF52F8F8FD0F277DFFA9FF52FD0727F8
%F8F852A8AFA8A9A8AFA8A9A8AFA8A9A8AFFD10A827F8F8F82727A8A9FFA8
%FFA87D2727F8270527002705270027052700272705F8F8F8FD1EA827F8F8
%F82705270027052700270527002752FFA8FF7D27F827052700272705F8F8
%F8FD0FA8AFA8AFA8AFA8AFA8FFA8FFA8AFA8A8F8F8F8FD04277DAFFFA9FF
%FFFF592705FD0E27F8F8F884FFA8AFA8AFA9AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8FFA8FFA8AFA8A8F8F8F8FD0E27AFAFFFAF5205FD0827F8F8F884
%FFA8AFA8AFA9AFA8AFA8AFA8AFFD04A8A9A8A8A8A97D7D7EAFA8AF7DF8F8
%F805272727F8527DFFA8FFA8FF84520027052727270527272705272727F8
%F8F87DA8A9A8A89AA1A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A97D7D7EAFA8
%AF7DF8F8F8052727270527272705272727F87DAFAFAF7DF8270527272705
%272727F8F8F87DA8A9A8A89AA1A8A8A8A9A8A8A8A9AFA8A9A8AFA8AF5953
%52597EFFA97DF8F8F8FD0527002752A8FFFFA9FFAFA828FD0C2705F8F853
%FFA8A893B58DBDA8AFA8AFA8A9A8AFA8A9A8AFA8AF595352597EFFA97DF8
%F8F8FD0B270552A8FFFFA9FD0B2700F8F853FFA8A893B58DBDA8AFA8AFA8
%A9FD06A8A97E522E532E7DA8FF52F8F8F8052700270527F8270559A8FFA8
%AFA8FF272700270527002705270027F8F8F87DA8A9949393938DFD0CA8A9
%7E522E532E7DA8FF52F8F8F805270027052700270527F8277DFFA8FF5227
%00270527002705270027F8F8F87DA8A9949393938DFD07A8AFA8AFA8AFA8
%A85259525359FFAF7DF8F8F8FD0927F82E7DFD04FF7D00FD0B27F8F859FF
%A8BD93B693B6A2AFA8AFA8AFA8AFA8AFA8AFA8A85259525359FFAF7DF8F8
%F8FD0B2728FFA9FF7EFD0D27F8F859FFA8BD93B693B6A2AFA8AFA8AFA8A8
%A9A8A8A8A9A87D2E5252A8A8FF52F8F8F827270527272705272727F82727
%A8A8A8272705272727052727270527F8F8F87DA8A9A1B68D9394A9A8A8A8
%A9A8A8A8A9A8A8A8A9A87D2E5252A8A8FF52F8F8F8272705272727052727
%270027A8FFA852F82705272727052727270527F8F8F87DA8A9A1B68D9394
%A9A8A8A8A9A8A8A9A8AFA8A9A8AFA8847DA8A8A9A87EF8F8F8FD0E2752FD
%0D27F8F8F87DFFA8AFA1C3A1A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8847D
%A8A8A9A87EF8F8F8FD0B270552525200FD0C27F8F8F87DFFA8AFA1C3A1A9
%A8AFA8A9A8AFFD08A8A9A8A9A8A8A8A97DFD04F827052700270527002705
%270027F827002705270027052700270527F8F8F8FD04A8A984AFFD0FA8A9
%A8A9A8A8A8A97DFD04F82705270027052700270527F827F8270027052700
%27052700270527F8F8F8FD04A8A984AFFD08A8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AF27F8F8FD1B27F8F8F827A8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AF27F8F8FD1B27F8F8F827A8FFA8AFA8AF
%A8AFA8AFA8AFA8AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A852F8F8F8272727
%0527272705272727052727270527272705272727052727F8F8F852AFA8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A852F8F8
%F82727270527272705272727052727270527272705272727052727F8F8F8
%52AFA8A9A8A8A8A9A8A8A8A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%FF7DFD04F8FD1927F8F8F8A8A9A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8FF7DFD04F8FD1927F8F8F8A8A9A9A8AFA8A9A8
%AFA8A9A8AFA8A9FD10A8A927F8F8F8002705270027052700270527002705
%270027052700270527F8F8F827A8A9FD1DA8A927F8F8F800270527002705
%2700270527002705270027052700270527F8F8F827A8A9FD0EA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA884F8F8F8FD1727FD04F87DFFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA884F8F8F8FD
%1727FD04F87DFFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A852F8F8F82727270527272705272727052727270527
%27270527FD04F827AFA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A852F8F8F82727270527272705272727052727
%27052727270527FD04F827AFA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8AFA827F8F8F8FD1327FD05F8A9A8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%AFA827F8F8F8FD1327FD05F8A9A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFFD
%12A8AF7DFD04F82705270027052700270527002705270527FD05F884FD23
%A8AF7DFD04F82705270027052700270527002705270527FD05F884FD12A8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FF7DFD04F80500FD0D27FD05
%F884A9AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8FF7DFD04F82705FD0D27FD05F884A9AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFFD04A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%FF7D27FD05F8270027052727270527FD07F8FD04A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8FF7D27
%FD05F8270027052727270527FD07F8FD04A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8FFA852FD07
%F800F827FD08F828A8A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8FFA852FD07F800F827FD
%08F828A8A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9FD15A884AFA8
%7D27FD0EF8277DAFFD2AA884AFA87D27FD0EF8277DAFFD16A8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FF7D522727FD07F82752A8
%A8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FF7D522727FD07F82752A8
%A8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AFA8A87D7D527D527D7D
%A8A8FFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AFA8A87D7D52
%7D527D7DA8A8FFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8AFA8FFA9FFA8FFA8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8AFA8FFA9FFA8FFA8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFFD81A8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFFD04A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8
%A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9
%A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A884FFFFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9AFFFA9FD7DA8FFFFFFA9A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FD04FFA8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8AFFD05FFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%FD07FFFD76A884A8A8FD08FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AFFD0BFFA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8
%A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8
%A8A8A9A8A8A8A9A8A9A9FD0CFFA8FFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8
%A9A8AFA8A9A8FD12FFFD6BA8FFA8FD08FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (\315\274\317\361\303\350\304\241) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.929412 0.87924 0.890196 0.799985 ([\714\727\660\746\711\653]) 0 Xs
([\714\727\660\746\711\653])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\315\274\262\343 1) Ln
0 A
0 O
0.237217 0.128298 0.110445 0 0.8 0.839216 0.866667 Xa
0 J 0 j 1 w 10 M []0 d0 XR
36 4 m
36 1.791 34.209 0 32 0 C
4 0 L
1.791 0 0 1.791 0 4 C
0 32 L
0 34.209 1.791 36 4 36 C
32 36 L
34.209 36 36 34.209 36 32 C
36 4 L
f
0.675654 0.525414 0.451087 0.003052 0.403922 0.458824 0.498039 Xa
27 16.086 m
27.3789 16.086 27.686 15.7789 27.686 15.4 c
27.686 15.0211 27.3789 14.714 27 14.714 c
26.6211 14.714 26.314 15.0211 26.314 15.4 c
26.314 15.7789 26.6211 16.086 27 16.086 c
f
30.2 15.171 m
30.5789 15.171 30.886 14.8639 30.886 14.485 c
30.886 14.1061 30.5789 13.799 30.2 13.799 c
29.8211 13.799 29.514 14.1061 29.514 14.485 c
29.514 14.8639 29.8211 15.171 30.2 15.171 c
f
23.8 15.171 m
24.1789 15.171 24.486 14.8639 24.486 14.485 c
24.486 14.1061 24.1789 13.799 23.8 13.799 c
23.4211 13.799 23.114 14.1061 23.114 14.485 c
23.114 14.8639 23.4211 15.171 23.8 15.171 c
f
21.514 12.886 m
21.8929 12.886 22.2 12.5789 22.2 12.2 c
22.2 11.8211 21.8929 11.514 21.514 11.514 c
21.1351 11.514 20.828 11.8211 20.828 12.2 c
20.828 12.5789 21.1351 12.886 21.514 12.886 c
f
20.6 9.686 m
20.9789 9.686 21.286 9.37887 21.286 9 c
21.286 8.62113 20.9789 8.314 20.6 8.314 c
20.2211 8.314 19.914 8.62113 19.914 9 c
19.914 9.37887 20.2211 9.686 20.6 9.686 c
f
32.486 12.886 m
32.8649 12.886 33.172 12.5789 33.172 12.2 c
33.172 11.8211 32.8649 11.514 32.486 11.514 c
32.1071 11.514 31.8 11.8211 31.8 12.2 c
31.8 12.5789 32.1071 12.886 32.486 12.886 c
f
0.172915 0.923918 0.653559 0 0.854902 0.184314 0.278431 Xa
33.401 9.686 m
33.7799 9.686 34.087 9.37887 34.087 9 c
34.087 8.62113 33.7799 8.314 33.401 8.314 c
33.0221 8.314 32.715 8.62113 32.715 9 c
32.715 9.37887 33.0221 9.686 33.401 9.686 c
f
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
27 13.881 m
29.6957 13.881 31.881 11.6957 31.881 9 c
31.881 6.3043 29.6957 4.119 27 4.119 c
24.3043 4.119 22.119 6.3043 22.119 9 c
22.119 11.6957 24.3043 13.881 27 13.881 c
f
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
27 12.994 m
29.2058 12.994 30.994 11.2058 30.994 9 c
30.994 6.79417 29.2058 5.006 27 5.006 c
24.7942 5.006 23.006 6.79417 23.006 9 c
23.006 11.2058 24.7942 12.994 27 12.994 c
f
1 D
0.143404 0.072175 0.058991 0 0.882353 0.909804 0.929412 Xa
28.182 11.882 m
26.485 9.058 L
26.351 8.835 26.423 8.546 26.646 8.412 c
26.869 8.278 27.158 8.35 27.292 8.573 C
28.989 11.397 L
29.123 11.62 29.051 11.909 28.828 12.043 C
28.605 12.176 28.316 12.104 28.182 11.882 C
f
0 D
0.675654 0.525414 0.451087 0.003052 0.403922 0.458824 0.498039 Xa
9 16.086 m
9.37887 16.086 9.686 15.7789 9.686 15.4 c
9.686 15.0211 9.37887 14.714 9 14.714 c
8.62113 14.714 8.314 15.0211 8.314 15.4 c
8.314 15.7789 8.62113 16.086 9 16.086 c
f
12.2 15.171 m
12.5789 15.171 12.886 14.8639 12.886 14.485 c
12.886 14.1061 12.5789 13.799 12.2 13.799 c
11.8211 13.799 11.514 14.1061 11.514 14.485 c
11.514 14.8639 11.8211 15.171 12.2 15.171 c
f
5.8 15.171 m
6.17887 15.171 6.486 14.8639 6.486 14.485 c
6.486 14.1061 6.17887 13.799 5.8 13.799 c
5.42113 13.799 5.114 14.1061 5.114 14.485 c
5.114 14.8639 5.42113 15.171 5.8 15.171 c
f
3.514 12.886 m
3.89287 12.886 4.2 12.5789 4.2 12.2 c
4.2 11.8211 3.89287 11.514 3.514 11.514 c
3.13513 11.514 2.828 11.8211 2.828 12.2 c
2.828 12.5789 3.13513 12.886 3.514 12.886 c
f
2.6 9.686 m
2.97887 9.686 3.286 9.37887 3.286 9 c
3.286 8.62113 2.97887 8.314 2.6 8.314 c
2.22113 8.314 1.914 8.62113 1.914 9 c
1.914 9.37887 2.22113 9.686 2.6 9.686 c
f
14.486 12.886 m
14.8649 12.886 15.172 12.5789 15.172 12.2 c
15.172 11.8211 14.8649 11.514 14.486 11.514 c
14.1071 11.514 13.8 11.8211 13.8 12.2 c
13.8 12.5789 14.1071 12.886 14.486 12.886 c
f
0.172915 0.923918 0.653559 0 0.854902 0.184314 0.278431 Xa
15.401 9.686 m
15.7799 9.686 16.087 9.37887 16.087 9 c
16.087 8.62113 15.7799 8.314 15.401 8.314 c
15.0221 8.314 14.715 8.62113 14.715 9 c
14.715 9.37887 15.0221 9.686 15.401 9.686 c
f
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
9 13.881 m
11.6957 13.881 13.881 11.6957 13.881 9 c
13.881 6.3043 11.6957 4.119 9 4.119 c
6.3043 4.119 4.119 6.3043 4.119 9 c
4.119 11.6957 6.3043 13.881 9 13.881 c
f
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
9.001 12.995 m
11.2068 12.995 12.995 11.2068 12.995 9.001 c
12.995 6.79517 11.2068 5.007 9.001 5.007 c
6.79518 5.007 5.007 6.79517 5.007 9.001 c
5.007 11.2068 6.79518 12.995 9.001 12.995 c
f
1 D
0.143404 0.072175 0.058991 0 0.882353 0.909804 0.929412 Xa
6.099 10.132 m
8.952 8.485 L
9.177 8.355 9.465 8.432 9.595 8.657 c
9.725 8.882 9.648 9.17 9.423 9.3 C
6.57 10.947 L
6.344 11.077 6.057 11 5.927 10.775 c
5.797 10.55 5.874 10.262 6.099 10.132 C
f
0 D
0.675654 0.525414 0.451087 0.003052 0.403922 0.458824 0.498039 Xa
27 33.086 m
27.3789 33.086 27.686 32.7789 27.686 32.4 c
27.686 32.0211 27.3789 31.714 27 31.714 c
26.6211 31.714 26.314 32.0211 26.314 32.4 c
26.314 32.7789 26.6211 33.086 27 33.086 c
f
30.2 32.171 m
30.5789 32.171 30.886 31.8639 30.886 31.485 c
30.886 31.1061 30.5789 30.799 30.2 30.799 c
29.8211 30.799 29.514 31.1061 29.514 31.485 c
29.514 31.8639 29.8211 32.171 30.2 32.171 c
f
23.8 32.171 m
24.1789 32.171 24.486 31.8639 24.486 31.485 c
24.486 31.1061 24.1789 30.799 23.8 30.799 c
23.4211 30.799 23.114 31.1061 23.114 31.485 c
23.114 31.8639 23.4211 32.171 23.8 32.171 c
f
21.514 29.886 m
21.8929 29.886 22.2 29.5789 22.2 29.2 c
22.2 28.8211 21.8929 28.514 21.514 28.514 c
21.1351 28.514 20.828 28.8211 20.828 29.2 c
20.828 29.5789 21.1351 29.886 21.514 29.886 c
f
20.6 26.686 m
20.9789 26.686 21.286 26.3789 21.286 26 c
21.286 25.6211 20.9789 25.314 20.6 25.314 c
20.2211 25.314 19.914 25.6211 19.914 26 c
19.914 26.3789 20.2211 26.686 20.6 26.686 c
f
32.486 29.886 m
32.8649 29.886 33.172 29.5789 33.172 29.2 c
33.172 28.8211 32.8649 28.514 32.486 28.514 c
32.1071 28.514 31.8 28.8211 31.8 29.2 c
31.8 29.5789 32.1071 29.886 32.486 29.886 c
f
0.172915 0.923918 0.653559 0 0.854902 0.184314 0.278431 Xa
33.401 26.686 m
33.7799 26.686 34.087 26.3789 34.087 26 c
34.087 25.6211 33.7799 25.314 33.401 25.314 c
33.0221 25.314 32.715 25.6211 32.715 26 c
32.715 26.3789 33.0221 26.686 33.401 26.686 c
f
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
27 30.881 m
29.6957 30.881 31.881 28.6957 31.881 26 c
31.881 23.3043 29.6957 21.119 27 21.119 c
24.3043 21.119 22.119 23.3043 22.119 26 c
22.119 28.6957 24.3043 30.881 27 30.881 c
f
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
27.001 29.994 m
29.2068 29.994 30.995 28.2058 30.995 26 c
30.995 23.7942 29.2068 22.006 27.001 22.006 c
24.7952 22.006 23.007 23.7942 23.007 26 c
23.007 28.2058 24.7952 29.994 27.001 29.994 c
f
1 D
0.143404 0.072175 0.058991 0 0.882353 0.909804 0.929412 Xa
25.011 28.397 m
26.708 25.573 L
26.842 25.35 27.131 25.278 27.354 25.412 c
27.577 25.546 27.649 25.835 27.515 26.058 C
25.819 28.882 L
25.685 29.105 25.396 29.177 25.173 29.043 C
24.949 28.909 24.877 28.619 25.011 28.397 C
f
0 D
0.675654 0.525414 0.451087 0.003052 0.403922 0.458824 0.498039 Xa
9 33.086 m
9.37887 33.086 9.686 32.7789 9.686 32.4 c
9.686 32.0211 9.37887 31.714 9 31.714 c
8.62113 31.714 8.314 32.0211 8.314 32.4 c
8.314 32.7789 8.62113 33.086 9 33.086 c
f
12.2 32.171 m
12.5789 32.171 12.886 31.8639 12.886 31.485 c
12.886 31.1061 12.5789 30.799 12.2 30.799 c
11.8211 30.799 11.514 31.1061 11.514 31.485 c
11.514 31.8639 11.8211 32.171 12.2 32.171 c
f
5.8 32.171 m
6.17887 32.171 6.486 31.8639 6.486 31.485 c
6.486 31.1061 6.17887 30.799 5.8 30.799 c
5.42113 30.799 5.114 31.1061 5.114 31.485 c
5.114 31.8639 5.42113 32.171 5.8 32.171 c
f
3.514 29.886 m
3.89287 29.886 4.2 29.5789 4.2 29.2 c
4.2 28.8211 3.89287 28.514 3.514 28.514 c
3.13513 28.514 2.828 28.8211 2.828 29.2 c
2.828 29.5789 3.13513 29.886 3.514 29.886 c
f
2.6 26.686 m
2.97887 26.686 3.286 26.3789 3.286 26 c
3.286 25.6211 2.97887 25.314 2.6 25.314 c
2.22113 25.314 1.914 25.6211 1.914 26 c
1.914 26.3789 2.22113 26.686 2.6 26.686 c
f
14.486 29.886 m
14.8649 29.886 15.172 29.5789 15.172 29.2 c
15.172 28.8211 14.8649 28.514 14.486 28.514 c
14.1071 28.514 13.8 28.8211 13.8 29.2 c
13.8 29.5789 14.1071 29.886 14.486 29.886 c
f
0.172915 0.923918 0.653559 0 0.854902 0.184314 0.278431 Xa
15.401 26.686 m
15.7799 26.686 16.087 26.3789 16.087 26 c
16.087 25.6211 15.7799 25.314 15.401 25.314 c
15.0221 25.314 14.715 25.6211 14.715 26 c
14.715 26.3789 15.0221 26.686 15.401 26.686 c
f
0.929412 0.87924 0.890196 0.799985 0 0 0 Xa
9 30.882 m
11.6957 30.882 13.881 28.6967 13.881 26.001 c
13.881 23.3053 11.6957 21.12 9 21.12 c
6.3043 21.12 4.119 23.3053 4.119 26.001 c
4.119 28.6967 6.3043 30.882 9 30.882 c
f
0.834745 0.759243 0.697047 0.470344 0.160784 0.184314 0.2 Xa
8.999 29.994 m
11.2048 29.994 12.993 28.2058 12.993 26 c
12.993 23.7942 11.2048 22.006 8.999 22.006 c
6.79317 22.006 5.005 23.7942 5.005 26 c
5.005 28.2058 6.79317 29.994 8.999 29.994 c
f
1 D
0.143404 0.072175 0.058991 0 0.882353 0.909804 0.929412 Xa
11.431 27.947 m
8.578 26.3 L
8.353 26.17 8.276 25.882 8.406 25.657 c
8.536 25.432 8.824 25.355 9.049 25.485 C
11.902 27.132 L
12.127 27.262 12.204 27.55 12.074 27.775 C
11.943 28 11.655 28.077 11.431 27.947 C
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
